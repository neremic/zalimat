swagger: '2.0'

# basic meta information
info:
  title: Application Lifecycle Manangement API
  version: '0.2'
  description: STUPS' Application Lifecycle Manangement API registry.

externalDocs:
  description: STUPS overview
  url: http://stups.io

# technical configuration
basePath: /
produces:
- application/json
- application/problem+json
consumes:
- application/json

security:
  - oauth2: [uid]

paths:

  '/servercount/{application_id}':
    get:
      summary: read data containing amount of running instances of an application at a certain point in time
      description: |
        TBD
      tags:
        - lifecycle-events
      operationId: 'org.zalando.stups.yourturn.api/read-servercount-by-application'
      parameters:
        - $ref: '#/parameters/ApplicationID'
        - $ref: '#/parameters/StartDate'
        - $ref: '#/parameters/EndDate'
      responses:
        200:
          description: Returns an array of objects per version of the requested application with amount running instances in a certain point of time
          schema:
            type: array
            items:
              type: object
              properties:
                version_id:
                  type: string
                  description: some version id
                metadata:
                  type: object
                  properties:
                    scm_source:
                      type: object
                      properties:
                        repo_url:
                          type: string
                        git_hash:
                          type: string
                        commiter:
                          type: string
                    docker_source:
                      type: string
                    pull_request:
                      type: object
                      properties:
                        link:
                          type: string
                events:
                  type: array
                  items:
                    type: object
                    properties:
                      timestamp:
                        $ref: '#/definitions/Timestamp'
                      count:
                        type: integer
                        format: int32
                        description: amount of instances at the given change_date
                        example: 4
                      instances:
                        type: array
                        items:
                          type: object
                          properties:
                            event_type:
                              type: string
                              enum: [ 'scaledUp', 'scaledDown']
                            instance_id:
                              type: string

        default:
          $ref: '#/responses/Error'

# definitions

parameters:
  ApplicationID:
    name: application_id
    in: path
    type: string
    description: ID of the application
    required: true

  StartDate:
    name: from
    in: query
    description: date specifying to only return events that occured past (inclusive) that date.
    required: false
    type: string
    format: date-time
    allowEmptyValue: false

  EndDate:
    name: to
    in: query
    description: date specifying to only return events that occured before (inclusive) that date.
    required: false
    type: string
    format: date-time
    allowEmptyValue: false

responses:
  Error:
    description: An error occured.
    schema:
      type: object
      properties:
        type:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the problem type.
          example: http://httpstatus.es/503
          x-nullable: false
        title:
          type: string
          description: |
            A short, summary of the problem type
          example: Service Unavailable
          x-nullable: false
        status:
          type: integer
          format: int32
          description: |
            The HTTP status code generated by the origin server for this occurrence
            of the problem.
          example: 503
        detail:
          type: string
          description: |
            A human readable explanation specific to this occurrence of the
            problem.
        instance:
          type: string
          format: uri
          description: |
            An absolute URI that identifies the specific occurrence of the problem.

definitions:

  Timestamp:
    type: string
    format: date-time
    description: Point in time when the event occured.
    example: '2015-04-25T16:25:00.000Z'

securityDefinitions:
  oauth2:
    type: oauth2
    flow: implicit
    authorizationUrl: https://example.com/oauth2/dialog
    scopes:
      uid: Unique identifier of the user accessing the service.
